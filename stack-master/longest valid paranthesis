https://practice.geeksforgeeks.org/problems/longest-valid-parentheses/0/


#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	ll t;
	cin>>t;
	while(t--){
	    string s;
	    cin>>s;
	    ll n = s.length();
	    vector<ll> v(n,0);
	    stack<ll> st;
	    for(ll i=0;i<n;i++){
      
          // if opening bracket push it inside the stack the index
	        if(s[i]=='('){
	            st.push(i);
	        } else{
          
              // if closing bracket and stack is not empty pop out one element from the stack and
              // mark 1 on both the indexex in our vector
	            if(!st.empty()){
	                v[st.top()]=1;
	                v[i]=1;
	                st.pop();
	            }
	        }
	    }
	    ll ma=0;
	    for(ll i=1;i<n;i++){
      
          // just caculate the maximum sum subarray if there is zero start the new sum from that index
	        if(v[i]!=0){
	            v[i]+=v[i-1];
	        }
	        ma = max(v[i],ma);
	    }
	    cout<<ma<<endl;
	}
	
	return 0;
}
