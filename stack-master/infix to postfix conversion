int predc(char s){
    if(s=='('){
        return 0;
    }
    else if(s=='^'){
        return 3;
    } else if(s=='*' || s=='/'){
        return 2;
    } else if(s=='+' || s=='-'){
        return 1;
    }
}

string infixToPostfix(string s)
{
    // Your code here
    string s1="";
    stack<char> st;
    for(auto i:s){
    
    
        if(i>='a' && i<='z' || i>='A' && i<='Z'){
            s1+=i;
        } else if(i=='('){
            st.push(i);
        } else if(i==')'){
            while(!st.empty() && st.top()!='('){
                s1+=st.top();
                st.pop();
            }
            // cout<<st.top()<<endl;
            if(!st.empty()){
                st.pop();
            }
        } else if(st.empty() || predc(i)>predc(st.top())){
            st.push(i);
        } else{
            while(!st.empty() && predc(i)<=predc(st.top())){
                s1+=st.top();
                st.pop();
            }
            st.push(i);
        }
    }
    while(!st.empty()){
        s1+=st.top();
        st.pop();
    }
    return s1;
}
