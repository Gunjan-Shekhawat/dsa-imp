/* a node of the singly linked list 
struct node
{
    int data;
    struct node *next;
    
    node(int x){
        data = x;
        next = NULL;
    }
}; */

node *divide(node *head){
    if(!head || !head->next){
        return head;
    }
    node *head1 = NULL, *tail = NULL, *head2 = NULL, *tail2 = NULL, *temp=head->next;
    head->next = NULL;
    while(temp){
        if(temp->data > head->data){
            if(!head2){
                head2 = temp;
                tail2 = temp;
            } else{
                tail2->next = temp;
                tail2 = tail2->next;
            }
            temp = temp->next;
            tail2->next = NULL;
        } else{
            if(!head1){
                head1 = temp;
                tail = temp;
            } else{
                tail->next = temp;
                tail = tail->next;
            }
            temp = temp->next;
            tail->next = NULL;
        }
    }
    node *left = divide(head1);
    if(left){
        temp = left;
        while(temp->next){
            temp = temp->next;
        }
        temp->next = head;
        head->next = divide(head2);
        return left;
    }
    head->next = divide(head2);
    return head;
}

//you have to complete this function
void quickSort(struct node **headRef) {
    (*headRef) = divide((*headRef));
}
