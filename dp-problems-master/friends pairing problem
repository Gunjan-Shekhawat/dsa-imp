https://practice.geeksforgeeks.org/problems/friends-pairing-problem/0


#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    ll t;
    cin>>t;
    
    // Suppose you have n-1 people and nth person comes then that 
    // nth person have follwing choice
    //     1. To be single
    //     2. To get paired with of ( n - 1 ) people.
        
    // When the nth person is single then the no of ways to do so 
    // is simply dp [ n - 1 ] .
    // but if the nth person pairs then he have to choose from 
    // n -1 friends and hence with have to see 
    // combination of ( n - 2 ) people now
    // hence Dp [ n ] = Dp [ n - 1 ] + ( n - 1 ) * Dp [ n - 2 ] ;
    vector<ll> dp(101,0);
    dp[0]=1;
    dp[1]=1;
    for(ll i=2;i<=100;i++){
        dp[i] = (dp[i-1] + ((i-1)*dp[i-2])%1000000007)%1000000007;
    }
    while(t--){
        ll n;
        cin>>n;
        cout<<dp[n]<<endl;
    }
    
	return 0;
}
