https://practice.geeksforgeeks.org/problems/longest-alternating-subsequence/0


#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	ll t;
	cin>>t;
	while(t--){
	    ll n;
	    cin>>n;
	    ll A[n];
	    for(ll i=0;i<n;i++){
	        cin>>A[i];
	    }
      
      //x1<x2>x3<x4>x5.....
	    vector<ll> dp(n,1);
	    for(ll i=1;i<n;i++){
	        for(ll j=0;j<i;j++){
	            if(dp[j]%2==0){
	                if(A[j]>A[i]){
	                    dp[i] = max(dp[i], dp[j]+1);
	                }
	            } else{
	                if(A[i]>A[j]){
	                    dp[i] = max(dp[i], dp[j]+1);
	                }
	            }
	        }
	    }
      
      //x1>x2<x3>x4<x5>......
	    vector<ll> dp1(n,1);
	    for(ll i=1;i<n;i++){
	        for(ll j=0;j<i;j++){
	            if(dp1[j]%2!=0){
	                if(A[j]>A[i]){
	                    dp1[i] = max(dp1[i], dp1[j]+1);
	                }
	            } else{
	                if(A[i]>A[j]){
	                    dp1[i] = max(dp1[i], dp1[j]+1);
	                }
	            }
	        }
	    }
	    ll ma=dp[0];
	    for(ll i=1;i<n;i++){
	        ma = max({dp[i], ma,dp1[i]});
	    }
	    cout<<ma<<endl;
	}
	return 0;
}
