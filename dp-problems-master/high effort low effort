https://practice.geeksforgeeks.org/problems/high-effort-vs-low-effort/0

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	ll t;
	cin>>t;
	while(t--){
	    ll n;
	    cin>>n;
	    ll h[n],l[n];
	    for(ll i=0;i<n;i++){
	        cin>>h[i];
	    }
	    for(ll i=0;i<n;i++){
	        cin>>l[i];
	    }
	    vector< vector<ll> > dp(2, vector<ll>(n+1,0));
	    
	    //we can include the high effort task for i=0
	    ll ans=max(l[0],h[0]);
	    dp[1][1] = h[0]; 
	    dp[0][1]=l[0];
	    
	    for(ll i=2;i<=n;i++){
	        
	        //include the current low effor task with the previous
	        //max of included and excluded
	        dp[0][i] = max(dp[0][i-1], dp[1][i-1])+l[i-1];
	        
	        //exclude the previous low effort task in order to
	        //include the current high effort task to the previous
	        // included max
	        dp[1][i] = dp[0][i-1]-l[i-2]+h[i-1];
	        ans = max(dp[0][i], dp[1][i]);
	    }
	   // for(ll i=0;i<=n;i++){
	   //     cout<<dp[0][i]<<" "<<dp[1][i]<<endl;
	   // }
	    cout<<ans<<endl;
	}
	
	return 0;
}
